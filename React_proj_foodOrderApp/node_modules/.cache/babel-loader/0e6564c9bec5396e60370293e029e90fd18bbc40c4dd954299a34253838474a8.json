{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\ARMY\\\\ArmyFirstProjects\\\\React_proj_foodOrderApp\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './MealItemForm.module.css';\nimport Input from '../../UI/Input.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MealItemForm(props) {\n  _s();\n  const [isFormValid, setIsFormValid] = useState(true);\n  const amountInputRef = useRef();\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    // value is always a string \n    const enteredAmountNum = +enteredAmount;\n    // Convert to number\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNum < 1 || enteredAmountNum > 5) {\n      // Checking for validaty \n      setIsFormValid(false);\n      return;\n    }\n    ;\n    props.onAddItemToCart(enteredAmountNum);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"Amount\",\n      input: {\n        ref: amountInputRef,\n        id: 'amount_' + props.id,\n        // Each input gets a unique id\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !isFormValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(MealItemForm, \"SqhP0eIZ9s3WpqDXB/d1z3vC1YM=\");\n_c = MealItemForm;\n;\nexport default MealItemForm;\nvar _c;\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["useRef","useState","classes","Input","jsxDEV","_jsxDEV","MealItemForm","props","_s","isFormValid","setIsFormValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNum","trim","length","onAddItemToCart","className","form","onSubmit","children","label","input","ref","id","type","min","max","step","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/ARMY/ArmyFirstProjects/React_proj_foodOrderApp/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport classes from './MealItemForm.module.css';\r\nimport Input from '../../UI/Input.js';\r\n\r\nfunction MealItemForm(props) {\r\n    const [isFormValid, setIsFormValid] = useState(true);\r\n    const amountInputRef = useRef();\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredAmount = amountInputRef.current.value;\r\n        // value is always a string \r\n        const enteredAmountNum = +enteredAmount;\r\n        // Convert to number\r\n\r\n        if (enteredAmount.trim().length === 0 || enteredAmountNum < 1 || enteredAmountNum > 5) {\r\n            // Checking for validaty \r\n            setIsFormValid(false);\r\n            return;\r\n        };\r\n\r\n        props.onAddItemToCart(enteredAmountNum);\r\n    };\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n            <Input label='Amount' input={{\r\n                ref: amountInputRef,\r\n                id: 'amount_' + props.id,\r\n                // Each input gets a unique id\r\n                type: 'number',\r\n                min: '1',\r\n                max: '5',\r\n                step: '1',\r\n                defaultValue: '1'\r\n            }} />\r\n            <button>+Add</button>\r\n            {!isFormValid && <p>Please enter a valid amount (1-5).</p>}\r\n        </form>\r\n    )\r\n};\r\nexport default MealItemForm;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,KAAK,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMU,cAAc,GAAGX,MAAM,CAAC,CAAC;EAE/B,MAAMY,aAAa,GAAIC,KAAK,IAAK;IAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAO,CAACC,KAAK;IAClD;IACA,MAAMC,gBAAgB,GAAG,CAACH,aAAa;IACvC;;IAEA,IAAIA,aAAa,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,IAAIF,gBAAgB,GAAG,CAAC,IAAIA,gBAAgB,GAAG,CAAC,EAAE;MACnF;MACAR,cAAc,CAAC,KAAK,CAAC;MACrB;IACJ;IAAC;IAEDH,KAAK,CAACc,eAAe,CAACH,gBAAgB,CAAC;EAC3C,CAAC;EAED,oBACIb,OAAA;IAAMiB,SAAS,EAAEpB,OAAO,CAACqB,IAAK;IAACC,QAAQ,EAAEZ,aAAc;IAAAa,QAAA,gBACnDpB,OAAA,CAACF,KAAK;MAACuB,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAE;QACzBC,GAAG,EAAEjB,cAAc;QACnBkB,EAAE,EAAE,SAAS,GAAGtB,KAAK,CAACsB,EAAE;QACxB;QACAC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,GAAG;QACRC,GAAG,EAAE,GAAG;QACRC,IAAI,EAAE,GAAG;QACTC,YAAY,EAAE;MAClB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACLjC,OAAA;MAAAoB,QAAA,EAAQ;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpB,CAAC7B,WAAW,iBAAIJ,OAAA;MAAAoB,QAAA,EAAG;IAAkC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEf;AAAC9B,EAAA,CApCQF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAoCpB;AACD,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}