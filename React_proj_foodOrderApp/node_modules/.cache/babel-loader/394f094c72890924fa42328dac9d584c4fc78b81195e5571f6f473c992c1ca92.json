{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\starter code\\\\React_proj\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\n// CardProvider component manages current context data& provides it to all components that want to access it\nimport { useReducer } from 'react';\nimport CartContext from './Cart-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => {\n      return item.id === action.item.id;\n    });\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n    if (existingCartItem) {\n      // If current item type already added\n      updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItem = {\n        ...action.item\n      };\n      updatedItems = state.items.concat(updatedItem);\n    }\n    ;\n\n    // Concat = returns a new array with the item added to it \n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nfunction CartProvider(props) {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const CartContextHelper = {\n    // Holds cart-related data and functions that will be shared with other components through React context\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartContextHelper,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\n;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","concat","CartProvider","props","_s","cartState","dispatchCartAction","addItemHandler","removeItemHandler","CartContextHelper","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/starter code/React_proj/src/components/store/CartProvider.js"],"sourcesContent":["// CardProvider component manages current context data& provides it to all components that want to access it\r\nimport { useReducer } from 'react';\r\nimport CartContext from './Cart-context.js';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        const existingCartItemIndex = state.items.findIndex(item => {\r\n            return (\r\n                item.id === action.item.id\r\n            );\r\n        });\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItem;\r\n        let updatedItems;\r\n        if (existingCartItem) {\r\n            // If current item type already added\r\n            updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        else {\r\n            updatedItem = { ...action.item };\r\n            updatedItems = state.items.concat(updatedItem);\r\n        };\r\n\r\n        // Concat = returns a new array with the item added to it \r\n\r\n        return ({\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        });\r\n    }\r\n    return (\r\n        defaultCartState\r\n    );\r\n};\r\nfunction CartProvider(props) {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n    const addItemHandler = (item) => {\r\n        dispatchCartAction({ type: 'ADD', item: item });\r\n    };\r\n    const removeItemHandler = (id) => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id });\r\n    };\r\n    const CartContextHelper = {\r\n        // Holds cart-related data and functions that will be shared with other components through React context\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    };\r\n    return (\r\n        <CartContext.Provider value={CartContextHelper}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":";;AAAA;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AACD,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACvB,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IACrF,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAACJ,IAAI,IAAI;MACxD,OACIA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE;IAElC,CAAC,CAAC;IACF,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC;IAC3D,IAAII,WAAW;IACf,IAAIC,YAAY;IAChB,IAAIF,gBAAgB,EAAE;MAClB;MACAC,WAAW,GAAG;QACV,GAAGD,gBAAgB;QACnBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAM,GAAGL,MAAM,CAACG,IAAI,CAACE;MAClD,CAAC;MACDM,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAK,CAAC;MAC/Be,YAAY,CAACL,qBAAqB,CAAC,GAAGI,WAAW;IACrD,CAAC,MACI;MACDA,WAAW,GAAG;QAAE,GAAGV,MAAM,CAACG;MAAK,CAAC;MAChCQ,YAAY,GAAGZ,KAAK,CAACH,KAAK,CAACgB,MAAM,CAACF,WAAW,CAAC;IAClD;IAAC;;IAED;;IAEA,OAAQ;MACJd,KAAK,EAAEe,YAAY;MACnBd,WAAW,EAAEK;IACjB,CAAC;EACL;EACA,OACIP,gBAAgB;AAExB,CAAC;AACD,SAASkB,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAG1B,UAAU,CAACO,WAAW,EAAEH,gBAAgB,CAAC;EACjF,MAAMuB,cAAc,GAAIf,IAAI,IAAK;IAC7Bc,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAK,CAAC,CAAC;EACnD,CAAC;EACD,MAAMgB,iBAAiB,GAAIX,EAAE,IAAK;IAC9BS,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,QAAQ;MAAEO,EAAE,EAAEA;IAAG,CAAC,CAAC;EAClD,CAAC;EACD,MAAMY,iBAAiB,GAAG;IACtB;IACAxB,KAAK,EAAEoB,SAAS,CAACpB,KAAK;IACtBC,WAAW,EAAEmB,SAAS,CAACnB,WAAW;IAClCwB,OAAO,EAAEH,cAAc;IACvBI,UAAU,EAAEH;EAChB,CAAC;EACD,oBACIzB,OAAA,CAACF,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAEJ,iBAAkB;IAAAK,QAAA,EAC1CX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B;AAACd,EAAA,CApBQF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAoBpB;AAED,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}