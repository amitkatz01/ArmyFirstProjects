{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\starter code\\\\React_proj\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\n// CardProvider component manages current context data& provides it to all components that want to access it\nimport { useReducer } from 'react';\nimport CartContext from './Cart-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    // Concat = returns a new array with the item added to it \n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nfunction CartProvider(props) {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const CartContextHelper = {\n    // Holds cart-related data and functions that will be shared with other components through React context\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartContextHelper,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\n;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","_s","cartState","dispatchCartAction","addItemHandler","removeItemHandler","id","CartContextHelper","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/starter code/React_proj/src/components/store/CartProvider.js"],"sourcesContent":["// CardProvider component manages current context data& provides it to all components that want to access it\r\nimport { useReducer } from 'react';\r\nimport CartContext from './Cart-context.js';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        const updatedItems = state.items.concat(action.item);\r\n        // Concat = returns a new array with the item added to it \r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        return ({\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        });\r\n    }\r\n    return (\r\n        defaultCartState\r\n    );\r\n};\r\nfunction CartProvider(props) {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n    const addItemHandler = (item) => {\r\n        dispatchCartAction({ type: 'ADD', item: item });\r\n    };\r\n    const removeItemHandler = (id) => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id });\r\n    };\r\n    const CartContextHelper = {\r\n        // Holds cart-related data and functions that will be shared with other components through React context\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    };\r\n    return (\r\n        <CartContext.Provider value={CartContextHelper}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":";;AAAA;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AACD,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACvB,MAAMC,YAAY,GAAGH,KAAK,CAACH,KAAK,CAACO,MAAM,CAACH,MAAM,CAACI,IAAI,CAAC;IACpD;IACA,MAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACI,IAAI,CAACE,KAAK,GAAGN,MAAM,CAACI,IAAI,CAACG,MAAM;IACrF,OAAQ;MACJX,KAAK,EAAEM,YAAY;MACnBL,WAAW,EAAEQ;IACjB,CAAC;EACL;EACA,OACIV,gBAAgB;AAExB,CAAC;AACD,SAASa,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGrB,UAAU,CAACO,WAAW,EAAEH,gBAAgB,CAAC;EACjF,MAAMkB,cAAc,GAAIT,IAAI,IAAK;IAC7BQ,kBAAkB,CAAC;MAAEX,IAAI,EAAE,KAAK;MAAEG,IAAI,EAAEA;IAAK,CAAC,CAAC;EACnD,CAAC;EACD,MAAMU,iBAAiB,GAAIC,EAAE,IAAK;IAC9BH,kBAAkB,CAAC;MAAEX,IAAI,EAAE,QAAQ;MAAEc,EAAE,EAAEA;IAAG,CAAC,CAAC;EAClD,CAAC;EACD,MAAMC,iBAAiB,GAAG;IACtB;IACApB,KAAK,EAAEe,SAAS,CAACf,KAAK;IACtBC,WAAW,EAAEc,SAAS,CAACd,WAAW;IAClCoB,OAAO,EAAEJ,cAAc;IACvBK,UAAU,EAAEJ;EAChB,CAAC;EACD,oBACIpB,OAAA,CAACF,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAEJ,iBAAkB;IAAAK,QAAA,EAC1CZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B;AAACf,EAAA,CApBQF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAoBpB;AAED,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}